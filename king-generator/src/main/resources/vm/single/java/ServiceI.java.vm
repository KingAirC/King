package ${table.packageName}.service;

import ${table.packageName}.pojo.${table.className};

import java.util.List;

public interface ${table.className}ServiceI {

    /**
     * 添加，属性为null就是默认值
     *
     * @param ${table.objName} pojo
     * @return 是否插入成功
     */
    boolean create(${table.className} ${table.objName});

    /**
     * 批量添加
     *
     * @param ${table.objName}s pojo列表
     * @return 是否插入成功
     */
    boolean createBatch(List<${table.className}> ${table.objName}s);

    /**
     * 根据主键删除记录
     *
     * @param ${table.objName} pojo
     * @return 是否删除成功
     */
    boolean deleteByPk(${table.className} ${table.objName});

    /**
     * 批量删除
     *
     * @param ${table.objName}s pojo列表
     * @return 是否删除成功
     */
    boolean deleteBatch(List<${table.className}> ${table.objName}s);

    /**
     * 根据主键更新
     *
     * @param ${table.objName} pojo
     * @return 是否更新成功
     */
    boolean updateByPk(${table.className} ${table.objName});

    /**
     * 更新删除标识符
     *
     * @param ${table.objName} pojo
     * @return 是否成功
     */
    boolean updateDeleteFlag(${table.className} ${table.objName});

    /**
     * 根据主键查询详细
     *
     * @param ${table.objName} pojo
     * @return pojo
     */
    ${table.className} read4DetailByPk(${table.className} ${table.objName});

    /**
     * 根据pojo非空字段查询列表
     *
     * @param ${table.objName} pojo
     * @return pojo列表
     */
    List<${table.className}> read4List(${table.className} ${table.objName});

    /**
     * 根据pojo非空字段查询数量
     *
     * @param ${table.objName} pojo
     * @return 数量
     */
    int read4Count(${table.className} ${table.objName});
    
}
